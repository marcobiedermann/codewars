import assert from 'node:assert/strict';
import { describe, it } from 'node:test';
import roots from './index.ts';

describe('roots', () => {
  it('should', () => {
    assert.strictEqual(roots(1, -35, -23), 35);
    assert.strictEqual(roots(6, 0, -24), 0);
    assert.strictEqual(roots(-5, 21, 0), 4.2);
    assert.strictEqual(roots(6, 4, 8), null);
    assert.strictEqual(roots(1, 5, -24), -5);
    assert.strictEqual(roots(3, 11, 6), -3.67);
    assert.strictEqual(roots(2, 2, 9), null);
    assert.strictEqual(roots(1, -5 / 3.0, -26), 1.67);
    assert.strictEqual(roots(1, 6, 10), null);
    assert.strictEqual(roots(7, -2, -5), 0.29);
    assert.strictEqual(roots(1, 8, 20), null);
    assert.strictEqual(roots(2, 3, -2), -1.5);
    assert.strictEqual(roots(1, 4, 12), null);
    assert.strictEqual(roots(3, -2, -5), 0.67);
    assert.strictEqual(roots(3, 4, 9), null);
    assert.strictEqual(roots(5, 4, 0), -0.8);
    assert.strictEqual(roots(4, -5, 0), 1.25);
    assert.strictEqual(roots(1, 4, 9), null);
    assert.strictEqual(roots(1, 0, -49), 0);
    assert.strictEqual(roots(2, 8, 8), -4);
    assert.strictEqual(roots(1, 0, -0.16), 0);
    assert.strictEqual(roots(1, 6, 12), null);
    assert.strictEqual(roots(1, 0, -9), 0);
    assert.strictEqual(roots(-3, 0, 12), 0);
    assert.strictEqual(roots(1, 3, 9), null);
    assert.strictEqual(roots(3, 7, 0), -2.33);
    assert.strictEqual(roots(5, 3, 6), null);
    assert.strictEqual(roots(1, 4, 4), -4);
    assert.strictEqual(roots(-1, 0, 5.29), 0);
    assert.strictEqual(roots(1, 12, 36), -12);
    assert.strictEqual(roots(1, 0, -0.09), 0);
    assert.strictEqual(roots(2, 5, 11), null);
    assert.strictEqual(roots(3, 0, -15), 0);
    assert.strictEqual(roots(1, -3, 0), 3);
    assert.strictEqual(roots(1, 8, 16), -8);
    assert.strictEqual(roots(2, 6, 9), null);
    assert.strictEqual(roots(-1, 36, 0), 36);
    assert.strictEqual(roots(5, -8, 0), 1.6);
    assert.strictEqual(roots(1, 5, 12), null);
    assert.strictEqual(roots(-14, 0, 0), 0);
    assert.strictEqual(roots(1, 7, 20), null);
    assert.strictEqual(roots(1, -6, 0), 6);
    assert.strictEqual(roots(1, -11, 30), 11);
    assert.strictEqual(roots(1, 3, 12), null);
    assert.strictEqual(roots(1, 6, 9), -6);
  });
});
